/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package org.itson.presentacion;

import java.awt.BorderLayout;
import java.awt.FlowLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.List;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import org.itson.dominio.Pedido;
import org.itson.implementaciones.FachadaNegocio;

/**
 *
 * @author icedo
 */
public class AdministrarPedidosFrm extends javax.swing.JFrame {

    private JTable tablaPedidos;
    private DefaultTableModel modelo;
    private FachadaNegocio fachada;

    /**
     * Creates new form AdministrarPedidosFrm
     */
    public AdministrarPedidosFrm() {
        initComponents();
        fachada = new FachadaNegocio();
        setTitle("Administrar Pedidos");
        setSize(800, 600);
        setLocationRelativeTo(null);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLayout(new BorderLayout());

        JButton btnRegresar = new JButton("<");
        btnRegresar.setFont(new java.awt.Font("Segoe UI", 1, 80)); // Ajusta el tamaño de la fuente
        btnRegresar.setPreferredSize(new java.awt.Dimension(100, 100)); // Establece el tamaño del botón

        // Crear un JPanel para contener el botón
        JPanel panelRegresar = new JPanel();
        panelRegresar.setLayout(new FlowLayout(FlowLayout.LEFT)); // Alinear a la izquierda
        panelRegresar.add(btnRegresar); // Agregar el botón al panel

        btnRegresar.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                PantallaPrincipalFrm principal = new PantallaPrincipalFrm();
                principal.mostrarPantallaPrincipal();
                dispose(); // Cierra la ventana actual
            }
        });

        add(panelRegresar, BorderLayout.NORTH);

        modelo = new DefaultTableModel(new String[]{"ID", "Cliente", "Estado", "Total"}, 0);
        tablaPedidos = new JTable(modelo);
        JScrollPane scrollPane = new JScrollPane(tablaPedidos);
        add(scrollPane, BorderLayout.CENTER);

        JButton btnPagar = new JButton("Pagar");
        btnPagar.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                int filaSeleccionada = tablaPedidos.getSelectedRow();
                if (filaSeleccionada != -1) {
                    Long idPedido = (Long) modelo.getValueAt(filaSeleccionada, 0);
                    String estadoPedido = (String) modelo.getValueAt(filaSeleccionada, 2); // Suponiendo que la columna 2 es el estado

                    // Verificar si el pedido ya está pagado
                    if ("Pagado".equals(estadoPedido)) {
                        JOptionPane.showMessageDialog(null, "El pedido ya está pagado.");
                    } else {
                        new RealizarPagoFrm(idPedido).setVisible(true);
                        dispose(); // Cerrar el formulario actual
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Por favor, selecciona un pedido.");
                }
            }
        });
        add(btnPagar, BorderLayout.SOUTH);

        cargarPedidos();
    }
    

    private void cargarPedidos() {
        List<Pedido> pedidos = fachada.getControlPedido().consultarPedidos();
        for (Pedido pedido : pedidos) {
            modelo.addRow(new Object[]{pedido.getId(), pedido.getCliente().getNombre(), pedido.getEstado(), pedido.getTotal()});
        }
    }

    public void mostrarAdministrarPedidos() {
        this.setVisible(true);
    }

    public void ocultarAdministrarPedidos() {
        this.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
